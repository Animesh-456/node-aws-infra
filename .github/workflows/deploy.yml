name: CI/CD pipeline for Nodejs application

on:
  push:
    branches: [ main ]

  pull_request:
    types: [closed]
    branches: [ main ] # Merge to master branch


jobs:
  terraform: 
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}


    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
       terraform_version: "1.5.7"

    - name: Terraform Init
      working-directory: ./
      run: terraform init -input=false

    - name: Terraform Plan
      working-directory: ./infra
      # env:
      #   TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      #   TF_VAR_frontend_image: ${{ secrets.FRONTEND_IMAGE }}
      #   TF_VAR_subnet_ids: ${{ secrets.SUBNET_IDS }}
      #   TF_VAR_frontend_url: ${{ secrets.FRONTEND_URL }}
      #   TF_VAR_backend_url: ${{ secrets.BACKEND_URL }}
      #   TF_VAR_backend_file_url: ${{ secrets.BACKEND_FILE_URL }}
      run: terraform plan -out=tfplan


    - name: Terraform Apply
      # if: github.event.pull_request.merged == true
      working-directory: ./infra
      run: terraform apply -auto-approve


    